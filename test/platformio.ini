; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description = "Unit Tests for Ark-Cpp-Crypto"
src_dir = ../src
build_dir = ../build/.pioenvs
libdeps_dir = ../extern/.piolibdeps

[base]
# Replace googletest library with proper release once ESP8266 support PR is merged to googletest
lib_deps = ArduinoJson@6.12.0, BIP66@0.2.1, micro-ecc@1.0.0, https://github.com/ciband/googletest.git#pre_release
build_flags = -I../test -I../test/iot/ -I../src -I../src/lib -I../src/include/cpp-crypto -DUNIT_TEST
src_filter = +<../src> +<../test/iot>
upload_speed = 921600

[esp8266]
build_flags = -D_GLIBCXX_USE_C99

[common_tests]
src_filter = +<../test/common>

[crypto_tests]
src_filter = +<../test/crypto>

[crypto_curve_ecdsa_sign_tests]
src_filter = +<../test/crypto/curve_ecdsa_sign.cpp>

[crypto_curve_ecdsa_sign_null_pk_tests]
src_filter = +<../test/crypto/curve_ecdsa_sign_null_pk.cpp>

[crypto_curve_ecdsa_sign_null_hash32_sha256_tests]
src_filter = +<../test/crypto/curve_ecdsa_sign_null_hash32_sha256.cpp>

[crypto_curve_ecdsa_sign_null_hash32_privatekey_tests]
src_filter = +<../test/crypto/curve_ecdsa_sign_null_hash32_privatekey.cpp>

[crypto_curve_publickey_tests]
src_filter = +<../test/crypto/curve_publickey.cpp>

[crypto_curve_verify_invalid_tests]
src_filter = +<../test/crypto/curve_verify_invalid.cpp>

[crypto_curve_verify_valid_tests]
src_filter = +<../test/crypto/curve_verify_valid.cpp>

[crypto_hash_tests]
src_filter = +<../test/crypto/hash.cpp>

[crypto_message_tests]
src_filter = +<../test/crypto/message.cpp>

[crypto_message_sign_tests]
src_filter = +<../test/crypto/message_sign.cpp>

[crypto_message_verify_tests]
src_filter = +<../test/crypto/message_verify.cpp>

[crypto_slot_tests]
src_filter = +<../test/crypto/slot.cpp>

[defaults_tests]
src_filter = +<../test/defaults>

[identities_tests]
src_filter = +<../test/identities>

[identities_address_tests]
src_filter = +<../test/identities/address.cpp>

[identities_keys_tests]
src_filter = +<../test/identities/keys.cpp>

[identities_keys_publickey_tests]
src_filter = +<../test/identities/keys_publickey.cpp>

[identities_privatekey_tests]
src_filter = +<../test/identities/privatekey.cpp>

[identities_publickey_tests]
src_filter = +<../test/identities/publickey.cpp>

[managers_tests]
src_filter = +<../test/managers>

[networks_tests]
src_filter = +<../test/networks>

[transactions_tests]
src_filter = +<../test/transactions>

[transactions_builder_tests]
src_filter = +<../test/transactions/builder.cpp>

[transactions_builder_transfer_custom_network_tests]
src_filter = +<../test/transactions/builder_transfer_custom_network.cpp>

[transactions_deserializer_delegate_registration_tests]
src_filter = +<../test/transactions/deserializer_delegate_registration.cpp>

[transactions_deserializer_multi_signature_registration_tests]
src_filter = +<../test/transactions/deserializer_multi_signature_registration.cpp>

[transactions_deserializer_second_signature_registration_tests]
src_filter = +<../test/transactions/deserializer_second_signature_registration.cpp>

[transactions_deserializer_transfer_tests]
src_filter = +<../test/transactions/deserializer_transfer.cpp>

[transactions_deserializer_vote_tests]
src_filter = +<../test/transactions/deserializer_vote.cpp>

[transactions_serializer_tests]
src_filter = +<../test/transactions/serializer.cpp>

[transactions_transaction_tests]
src_filter = +<../test/transactions/transaction.cpp>

[transactions_transaction_to_array_type_0_tests]
src_filter = +<../test/transactions/transaction_to_array_type_0.cpp>

[transactions_transaction_to_array_type_1_tests]
src_filter = +<../test/transactions/transaction_to_array_type_1.cpp>

[transactions_transaction_to_array_type_2_tests]
src_filter = +<../test/transactions/transaction_to_array_type_2.cpp>

[transactions_transaction_to_array_type_3_tests]
src_filter = +<../test/transactions/transaction_to_array_type_3.cpp>

[transactions_transaction_to_json_type_0_tests]
src_filter = +<../test/transactions/transaction_to_json_type_0.cpp>

[transactions_transaction_to_json_type_1_tests]
src_filter = +<../test/transactions/transaction_to_json_type_1.cpp>

[transactions_transaction_to_json_type_2_tests]
src_filter = +<../test/transactions/transaction_to_json_type_2.cpp>

[transactions_transaction_to_json_type_3_tests]
src_filter = +<../test/transactions/transaction_to_json_type_3.cpp>

[utils_tests]
src_filter = +<../test/utils>

[env:esp8266_common_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${common_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_curve_ecdsa_sign_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}  ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_curve_ecdsa_sign_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_curve_ecdsa_sign_null_pk_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}  ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_curve_ecdsa_sign_null_pk_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_curve_ecdsa_sign_null_hash32_sha256_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}  ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_curve_ecdsa_sign_null_hash32_sha256_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_curve_ecdsa_sign_null_hash32_privatekey_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}  ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_curve_ecdsa_sign_null_hash32_privatekey_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_curve_publickey_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_curve_publickey_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_curve_verify_invalid_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_curve_verify_invalid_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_curve_verify_valid_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_curve_verify_valid_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_hash_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_hash_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_message_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_message_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_message_sign_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_message_sign_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_message_verify_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_message_verify_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_crypto_slot_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${crypto_slot_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_defaults_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${defaults_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_identities_address_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${identities_address_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_identities_keys_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${identities_keys_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_identities_keys_publickey_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${identities_keys_publickey_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_identities_privatekey_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${identities_privatekey_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_identities_publickey_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${identities_publickey_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_managers_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${managers_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_networks_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${networks_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_builder_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_builder_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_builder_transfer_custom_network_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_builder_transfer_custom_network_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_deserializer_delegate_registration_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_deserializer_delegate_registration_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_deserializer_multi_signature_registration_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_deserializer_multi_signature_registration_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_deserializer_second_signature_registration_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_deserializer_second_signature_registration_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_deserializer_transfer_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_deserializer_transfer_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_deserializer_vote_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_deserializer_vote_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_serializer_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_serializer_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_to_array_type_0_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_to_array_type_0_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_to_array_type_1_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_to_array_type_1_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_to_array_type_2_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_to_array_type_2_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_to_array_type_3_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_to_array_type_3_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_to_json_type_0_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_to_json_type_0_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_to_json_type_1_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_to_json_type_1_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_to_json_type_2_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_to_json_type_2_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_transactions_transaction_to_json_type_3_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${transactions_transaction_to_json_type_3_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp8266_utils_tests]
platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
board = huzzah
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags} ${esp8266.build_flags}
src_filter = ${base.src_filter} ${utils_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp32_common_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}
src_filter = ${base.src_filter} ${common_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp32_crypto_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}
src_filter = ${base.src_filter} ${crypto_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp32_defaults_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}
src_filter = ${base.src_filter} ${defaults_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp32_identities_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}
src_filter = ${base.src_filter} ${identities_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp32_managers_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}
src_filter = ${base.src_filter} ${managers_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp32_networks_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}
src_filter = ${base.src_filter} ${networks_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp32_transactions_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}
src_filter = ${base.src_filter} ${transactions_tests.src_filter}
upload_speed = ${base.upload_speed}

[env:esp32_utils_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${base.lib_deps}
build_flags = ${base.build_flags}
src_filter = ${base.src_filter} ${utils_tests.src_filter}
upload_speed = ${base.upload_speed}
upload_port = /dev/ttyUSB4
