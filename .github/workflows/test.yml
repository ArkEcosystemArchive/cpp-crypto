name: Test

on:
  push:
    branches:
      - 'master'
      - 'develop'
  pull_request:
    types: [ready_for_review, synchronize, opened]

jobs:
  arduino:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Make scripts executable
        run: sudo chmod -R +x ./.github/workflows/test/*.sh
      - name: Install Dependencies
        run: ./.github/workflows/test/install_arduino.sh
      - name: Build Arduino Sketch
        run: ./.github/workflows/test/script_arduino.sh

  platformio:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          sudo pip install -U platformio
          platformio update
      - name: Build
        run: |
          platformio run
          platformio run -d ./test

  linux-gcc7:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get -y install g++-7 gcc-7
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
          sudo update-alternatives --config gcc
      - name: Build
        run: |
          mkdir build && cd build
          cmake -DUNIT_TEST=ON ..
          cmake --build .
      - name: Run Tests
        run: ./build/test/ark_cpp_crypto_tests

  linux-clang-5:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt install liblldb-5.0-dev python-lldb-5.0
          sudo apt install clang-5.0 clang-tidy-5.0 clang-format-5.0 clang-5.0-doc libclang-common-5.0-dev libclang-5.0-dev libclang1-5.0 libllvm5.0 lldb-5.0 llvm-5.0 llvm-5.0-dev
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-5.0 60
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 50
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-5.0 60
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 50
      - name: Make scripts executable
        run: sudo chmod -R +x ./.github/workflows/test/*.sh
      - name: Build
        run: |
          mkdir build && cd build
          cmake -DUNIT_TEST=ON ..
          cmake --build .
      - name: Run Tests
        run: ./build/test/ark_cpp_crypto_tests
      - name: Clang Tidy
        run: ./.github/workflows/test/clang_tidy.sh
      - name: Clang Format
        run: ./.github/workflows/test/clang_format.sh

  macOS:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v1
      - run: COMPILER=clang++
      - name: Install Dependencies
        run: brew install cmake
      - name: Build
        run: |
          mkdir build && cd build
          cmake -DUNIT_TEST=ON ..
          cmake --build .
      - name: Run Tests
        run: ./build/test/ark_cpp_crypto_tests

  windows:
    runs-on: windows-2016
    strategy:
      matrix:
        build: [Debug, Release]

    steps:
      - uses: actions/checkout@v1
      - name: Setup MSBuild.exe
        uses: warrenbuckley/Setup-MSBuild@v1
      - name: CMake
        run: cmake -D UNIT_TEST=ON -G "Visual Studio 15 2017 Win64" .
      - name: Build Solution
        shell: cmd
        run: msbuild "%GITHUB_WORKSPACE%\ark_cpp_crypto.sln"
      - name: Run Tests
        shell: cmd
        run: "%GITHUB_WORKSPACE%\\test\\Debug\\ark_cpp_crypto_tests.exe"
